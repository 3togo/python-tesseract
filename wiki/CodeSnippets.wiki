#summary Reusable Code Snippets

= Code Snippets =

Example 1
{{{
import cv2.cv as cv
import tesseract

image=cv.LoadImage("foo.png", cv.CV_LOAD_IMAGE_GRAYSCALE)

api = tesseract.TessBaseAPI()
api.Init(".","eng",tesseract.OEM_DEFAULT)
#api.SetPageSegMode(tesseract.PSM_SINGLE_WORD)
api.SetPageSegMode(tesseract.PSM_AUTO)
tesseract.SetCvImage(image,api)
text=api.GetUTF8Text()
conf=api.MeanTextConf()
print text
}}}


Example 2
{{{
import tesseract
api = tesseract.TessBaseAPI()
api.Init(".","eng",tesseract.OEM_DEFAULT)
api.SetVariable("tessedit_char_whitelist", "0123456789abcdefghijklmnopqrstuvwxyz")
api.SetPageSegMode(tesseract.PSM_AUTO)

mImgFile = "eurotext.jpg"
mBuffer=open(mImgFile,"rb").read()
result = tesseract.ProcessPagesBuffer(mBuffer,len(mBuffer),api)
print "result(ProcessPagesBuffer)=",result
intPtr=api.AllWordConfidences()
print str(intPtr)
pyPtrRaw=tesseract.cdata(intPtr,300)
print len(pyPtrRaw),len(mBuffer)
pyPtr=[ord(data) for i,data in enumerate(pyPtrRaw)]
print pyPtr
tesseract.delete_intp(intPtr) 
}}}

Example 3
{{{
import cv2.cv as cv
import tesseract
import re
from string import punctuation
def header(mstr,stars):
	print "%s %s %s"%(stars,mstr,stars)

def countWords(strs):
	r = re.compile(r'[{}]'.format(punctuation))
	new_strs = r.sub(' ',strs)
	return len(new_strs.split())

def countWords2(strs):
	strs=strs.strip()
	words=re.split(r'[^0-9A-Za-z]+',strs)
	#print words
	return len(words)

api = tesseract.TessBaseAPI()
api.Init(".","eng",tesseract.OEM_DEFAULT)
api.SetPageSegMode(tesseract.PSM_AUTO)

image=cv.LoadImage("eurotext.jpg", cv.CV_LOAD_IMAGE_GRAYSCALE)
tesseract.SetCvImage(image,api)
text=api.GetUTF8Text()
conf=api.MeanTextConf()
print text,len(text)
print "Cofidence Level: %d %%"%conf
print "Confidences of All words"
header("Method 1","*"*10)
confOfText=api.AllWordConfidences()

print confOfText
print "Number of Words:"
print "counted by tesseract: %d"%len(confOfText) 
print "counted by me: %d[%d]"%(countWords(text), countWords2(text))
if len(confOfText)!=countWords(text):
	print "Why the words counted by tesseract are different from mine!!!!"
header("Method 2","*"*10)
confs=tesseract.AllWordConfidences(api)
print confs, len(confs)
}}}
Example 4
*How to do image edge enhancing and tesseract ocr 
{{{
import tesseract
import cv2
import cv2.cv as cv
import numpy as np


scale = 1
delta = 0
ddepth = cv2.CV_16S

gray=cv2.imread("an91cut.jpg")

### trim the edges
cut_offset=23
gray=gray[cut_offset:-cut_offset,cut_offset:-cut_offset]

### convert to gray color
gray = cv2.cvtColor(gray,cv2.COLOR_BGR2GRAY)

### edge enhancing by Sobeling
# Gradient-X
grad_x = cv2.Sobel(gray,ddepth,1,0,ksize = 3, scale = scale, delta = delta,borderType = cv2.BORDER_DEFAULT)
#grad_x = cv2.Scharr(gray,ddepth,1,0)

# Gradient-Y
grad_y = cv2.Sobel(gray,ddepth,0,1,ksize = 3, scale = scale, delta = delta, borderType = cv2.BORDER_DEFAULT)
#grad_y = cv2.Scharr(gray,ddepth,0,1)

abs_grad_x = cv2.convertScaleAbs(grad_x)   # converting back to uint8
abs_grad_y = cv2.convertScaleAbs(grad_y)
gray = cv2.addWeighted(abs_grad_x,0.5,abs_grad_y,0.5,0)

### Bluring
image1 = cv2.medianBlur(gray,5)	
image1[image1 < 50]= 255
image1 = cv2.GaussianBlur(image1,(31,13),0)	
color_offset=230
image1[image1 >= color_offset]= 255  
image1[image1 < color_offset ] = 0	#black

#### Insert White Border
offset=30
height,width = image1.shape
image1=cv2.copyMakeBorder(image1,offset,offset,offset,offset,cv2.BORDER_CONSTANT,value=(255,255,255)) 
cv2.namedWindow("Test")
cv2.imshow("Test", image1)
cv2.imwrite("an91cut_decoded.jpg",image1)
cv2.waitKey(0)
cv2.destroyWindow("Test")
### tesseract OCR
api = tesseract.TessBaseAPI()
api.Init(".","eng",tesseract.OEM_DEFAULT)
#api.SetPageSegMode(tesseract.PSM_AUTO)
#as suggested by zdenko podobny <zdenop@gmail.com>, 
#using PSM_SINGLE_BLOCK will be more reliable for ocr-ing a line of word. 
api.SetPageSegMode(tesseract.PSM_SINGLE_BLOCK)
height1,width1 = image1.shape
channel1=1
image = cv.CreateImageHeader((width1,height1), cv.IPL_DEPTH_8U, channel1)
cv.SetData(image, image1.tostring(),image1.dtype.itemsize * channel1 * (width1))
tesseract.SetCvImage(image,api)
text=api.GetUTF8Text()
conf=api.MeanTextConf()
image=None
print "..............."
print "Ocred Text: %s"%text
print "Cofidence Level: %d %%"%conf
}}}
[https://python-tesseract.googlecode.com/files/an91cut.jpg https://python-tesseract.googlecode.com/files/an91cut.jpg ]
[https://python-tesseract.googlecode.com/files/an91cut.jpg an91cut.jpg ]
enhanced image--> https://python-tesseract.googlecode.com/files/an91cut_decoded.jpg 